name: Deploy SAM

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  STACK_NAME: flask-portfolio-sam
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::820242946379:role/Github
          role-session-name: github-actions-sam-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Prepare artifacts bucket
        id: prepare-bucket
        run: |
          set -euo pipefail
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ARTIFACTS_BUCKET="sam-artifacts-${ACCOUNT_ID}-${AWS_REGION}"
          echo "Using artifacts bucket: ${ARTIFACTS_BUCKET}"
          if aws s3api head-bucket --bucket "${ARTIFACTS_BUCKET}" 2>/dev/null; then
            echo "Bucket exists"
          else
            echo "Creating bucket ${ARTIFACTS_BUCKET} in region ${AWS_REGION}"
            if [ "${AWS_REGION}" = "us-east-1" ]; then
              aws s3api create-bucket --bucket "${ARTIFACTS_BUCKET}"
            else
              aws s3api create-bucket --bucket "${ARTIFACTS_BUCKET}" --create-bucket-configuration LocationConstraint="${AWS_REGION}"
            fi
          fi
          # Export for later steps
          echo "bucket=${ARTIFACTS_BUCKET}" >> "$GITHUB_OUTPUT"

      - name: SAM Build
        run: sam build --no-use-container

      - name: SAM Deploy
        env:
          FLASK_SECRET_KEY: ${{ secrets.FLASK_SECRET_KEY }}
          CONTACT_RECIPIENT: ${{ secrets.CONTACT_RECIPIENT || vars.CONTACT_RECIPIENT || 'jeffrey.russell.smith@gmail.com' }}
          CONTACT_SENDER: ${{ secrets.CONTACT_SENDER || vars.CONTACT_SENDER || 'jeffrey.russell.smith@gmail.com' }}
          SES_REGION: ${{ vars.SES_REGION || 'us-east-1' }}
        run: |
          if [ -z "${FLASK_SECRET_KEY}" ]; then
            echo "Warning: FLASK_SECRET_KEY GitHub secret not set. Generating a strong random key for this deploy (will rotate sessions)." >&2
            FLASK_SECRET_KEY=$(python -c "import secrets; print(secrets.token_urlsafe(32))")
          fi
          echo "Using CONTACT_RECIPIENT=${CONTACT_RECIPIENT}"
          echo "Using CONTACT_SENDER=${CONTACT_SENDER}"
          if [ -n "${SES_REGION}" ]; then echo "Using SES_REGION=${SES_REGION}"; fi

          PARAMS=(
            "SecretKeyParam=${FLASK_SECRET_KEY}"
            "ContactRecipientParam=${CONTACT_RECIPIENT}"
            "ContactSenderParam=${CONTACT_SENDER}"
          )
          if [ -n "${SES_REGION}" ]; then
            PARAMS+=("SesRegionParam=${SES_REGION}")
          fi

          sam deploy \
            --stack-name "$STACK_NAME" \
            --s3-bucket "${{ steps.prepare-bucket.outputs.bucket }}" \
            --no-fail-on-empty-changeset \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides ${PARAMS[*]} \
            --region "$AWS_REGION"

      - name: Show Outputs
        run: |
          aws cloudformation describe-stacks --stack-name "$STACK_NAME" --query 'Stacks[0].Outputs' --output table --region "$AWS_REGION"